apiVersion: v1
kind: ServiceAccount
metadata:
  name: vmagent
  namespace: vm-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vmagent
rules:
  - apiGroups: ["","networking.k8s.io","extensions","discovery.k8s.io"]
    resources:
      - nodes
      - nodes/metrics
      - nodes/proxy
      - services
      - endpoints
      - endpointslices
      - pods
      - ingresses
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - namespaces
      - configmaps
      - secrets
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics","/metrics/resources"]
    verbs: ["get"]
  - apiGroups:
      - route.openshift.io
      - image.openshift.io
    resources:
      - routers/metrics
      - registry/metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vmagent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vmagent
subjects:
  - kind: ServiceAccount
    name: vmagent
    namespace: vm-operator
---
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMAgent
metadata:
  name: vmagent
  namespace: vm-operator
spec:
  serviceAccountName: vmagent
  replicaCount: 1
  resources:
    requests:
      cpu: "250m"
      memory: "350Mi"
    limits:
      cpu: "500m"
      memory: "850Mi"
  selectAllByDefault: true
  scrapeTimeout: "20s"
  scrapeInterval: "60s"
  logFormat: "json"
  logLevel: "INFO"
  vmAgentExternalLabelName: vmagent
  extraArgs:
    memory.allowedPercent: "40"
  remoteWrite:
    # handless 地址
    - url: "http://vminsert-vmcluster.vm-operator.svc:8480/insert/0/prometheus/api/v1/write"
    # - url: "http://vmsingle-example.default.svc:8429/api/v1/write"
  serviceScrapeNamespaceSelector: {}
  podScrapeNamespaceSelector: {}
  podScrapeSelector: {}
  serviceScrapeSelector: {}
  nodeScrapeSelector: {}
  nodeScrapeNamespaceSelector: {}
  staticScrapeSelector: {}
  staticScrapeNamespaceSelector: {}
  probeSelector: {}
  probeNamespaceSelector: {}
  serviceSpec:
    metadata:
      name: vmagent-access
      labels:
        app.kubernetes.io/name: vmagent
    spec:
        type: ClusterIP
        # type: NodePort